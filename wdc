-- Flying Script with WASD Controls, Toggleable with X
local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")

local flying = false
local speed = 50 -- Adjust the flying speed as needed
local bodyGyro, bodyVelocity
local flyingConnection

local function startFlying()
    if not flying then
        flying = true

        -- Enable flying
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        character.Humanoid.PlatformStand = true

        -- Create BodyGyro
        bodyGyro = Instance.new("BodyGyro")
        bodyGyro.Parent = character.HumanoidRootPart
        bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
        bodyGyro.P = 9e4
        bodyGyro.CFrame = character.HumanoidRootPart.CFrame

        -- Create BodyVelocity
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Parent = character.HumanoidRootPart
        bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)

        -- Flying loop
        flyingConnection = runService.Heartbeat:Connect(function()
            if flying then
                local moveDirection = Vector3.new(0, 0, 0)
                if userInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + workspace.CurrentCamera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - workspace.CurrentCamera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - workspace.CurrentCamera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + workspace.CurrentCamera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0, 1, 0)
                end
                if userInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                    moveDirection = moveDirection - Vector3.new(0, 1, 0)
                end

                -- Update BodyVelocity and BodyGyro
                bodyVelocity.Velocity = moveDirection * speed
                bodyGyro.CFrame = workspace.CurrentCamera.CFrame
            end
        end)
    end
end

local function stopFlying()
    if flying then
        flying = false

        -- Disable flying
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        character.Humanoid.PlatformStand = false

        -- Destroy BodyGyro and BodyVelocity
        if bodyGyro then
            bodyGyro:Destroy()
            bodyGyro = nil
        end
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end

        -- Disconnect flying connection
        if flyingConnection then
            flyingConnection:Disconnect()
            flyingConnection = nil
        end
    end
end

-- Keybind to start and stop flying
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.X and not gameProcessed then
        if flying then
            stopFlying()
        else
            startFlying()
        end
    end
end)
